[{"C:\\Users\\nicot\\OneDrive\\Escritorio\\outfit8\\events7-frontend\\src\\index.tsx":"1","C:\\Users\\nicot\\OneDrive\\Escritorio\\outfit8\\events7-frontend\\src\\reportWebVitals.ts":"2","C:\\Users\\nicot\\OneDrive\\Escritorio\\outfit8\\events7-frontend\\src\\App.tsx":"3","C:\\Users\\nicot\\OneDrive\\Escritorio\\outfit8\\events7-frontend\\src\\AppRouter.jsx":"4","C:\\Users\\nicot\\OneDrive\\Escritorio\\outfit8\\events7-frontend\\src\\components\\CreateEvent.tsx":"5","C:\\Users\\nicot\\OneDrive\\Escritorio\\outfit8\\events7-frontend\\src\\pages\\EventListPage.tsx":"6","C:\\Users\\nicot\\OneDrive\\Escritorio\\outfit8\\events7-frontend\\src\\pages\\CreateEventPage.tsx":"7"},{"size":554,"mtime":1696948888069,"results":"8","hashOfConfig":"9"},{"size":425,"mtime":1696773480221,"results":"10","hashOfConfig":"9"},{"size":837,"mtime":1697269378930,"results":"11","hashOfConfig":"9"},{"size":492,"mtime":1697201670401,"results":"12","hashOfConfig":"9"},{"size":1950,"mtime":1697043773570,"results":"13","hashOfConfig":"9"},{"size":4824,"mtime":1697274949568,"results":"14","hashOfConfig":"9"},{"size":2349,"mtime":1697268868679,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"ytiph1",{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\nicot\\OneDrive\\Escritorio\\outfit8\\events7-frontend\\src\\index.tsx",[],[],["39"],"C:\\Users\\nicot\\OneDrive\\Escritorio\\outfit8\\events7-frontend\\src\\reportWebVitals.ts",[],[],"C:\\Users\\nicot\\OneDrive\\Escritorio\\outfit8\\events7-frontend\\src\\App.tsx",[],[],"C:\\Users\\nicot\\OneDrive\\Escritorio\\outfit8\\events7-frontend\\src\\AppRouter.jsx",[],[],"C:\\Users\\nicot\\OneDrive\\Escritorio\\outfit8\\events7-frontend\\src\\components\\CreateEvent.tsx",[],[],"C:\\Users\\nicot\\OneDrive\\Escritorio\\outfit8\\events7-frontend\\src\\pages\\EventListPage.tsx",["40"],[],"// EventListPage.tsx\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport './styles/EventListPage.css';\r\n\r\ntype EventData = {\r\n  id: number;\r\n  name: string;\r\n  description: string;\r\n  type: string;\r\n  priority: number;\r\n};\r\n\r\nconst EventListPage = () => {\r\n  const [events, setEvents] = useState<EventData[]>([]);\r\n  const [editEventId, setEditEventId] = useState<number | null>(null);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchEvents = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:3001/events');\r\n        setEvents(response.data);\r\n      } catch (error) {\r\n        console.error('Error al cargar los eventos:', error);\r\n      }\r\n    };\r\n\r\n    fetchEvents();\r\n  }, []);\r\n\r\n  const handleUpdate = (eventId: number) => {\r\n    setEditEventId(eventId);\r\n  };\r\n\r\n  const handleCancelEdit = () => {\r\n    setEditEventId(null);\r\n  };\r\n\r\n  const handleSaveUpdate = async (eventId: number) => {\r\n    try {\r\n      const editedEvent = events.find((event) => event.id === eventId);\r\n\r\n      if (editedEvent) {\r\n        await axios.put(`http://localhost:3001/events/${eventId}`, editedEvent);\r\n        setEditEventId(null);\r\n\r\n        const updatedEvents = events.map((event) =>\r\n          event.id === eventId ? editedEvent : event\r\n        );\r\n        setEvents(updatedEvents);\r\n      } else {\r\n        console.error('El evento a editar no existe.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error al guardar la actualizaciÃ³n:', error);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (eventId: number) => {\r\n    try {\r\n      await axios.delete(`http://localhost:3001/events/${eventId}`);\r\n      const updatedEvents = events.filter((event) => event.id !== eventId);\r\n      setEvents(updatedEvents);\r\n    } catch (error) {\r\n      console.error('Error al eliminar el evento:', error);\r\n    }\r\n  };\r\n\r\n  const handleEditInputChange = (\r\n    e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>,\r\n    eventId: number\r\n  ) => {\r\n    const { name, value } = e.target;\r\n    setEvents((prevEvents) =>\r\n      prevEvents.map((event) =>\r\n        event.id === eventId ? { ...event, [name]: value } : event\r\n      )\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Event List</h1>\r\n      <Link to=\"/create\">Create Event</Link>\r\n      <ul className=\"event-list\">\r\n        {events.map((event) => (\r\n          <li className=\"event-card\" key={event.id}>\r\n            <h2>Event {event.id}</h2>\r\n            {editEventId === event.id ? (\r\n              <div className=\"edit-form\">\r\n                <label htmlFor=\"name\">Name:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  value={event.name}\r\n                  onChange={(e) => handleEditInputChange(e, event.id)}\r\n                />\r\n                <label htmlFor=\"description\">Description:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"description\"\r\n                  value={event.description}\r\n                  onChange={(e) => handleEditInputChange(e, event.id)}\r\n                />\r\n                <label htmlFor=\"type\">Type:</label>\r\n                <select\r\n                  name=\"type\"\r\n                  value={event.type}\r\n                  onChange={(e) => handleEditInputChange(e, event.id)}\r\n                >\r\n                  <option value=\"ads\">Ads</option>\r\n                  <option value=\"app\">App</option>\r\n                  <option value=\"liveops\">LiveOps</option>\r\n                  <option value=\"crosspromo\">Cross Promo</option>\r\n                </select>\r\n                <label htmlFor=\"priority\">Priority:</label>\r\n                <input\r\n                  type=\"number\"\r\n                  name=\"priority\"\r\n                  value={event.priority}\r\n                  onChange={(e) => handleEditInputChange(e, event.id)}\r\n                />\r\n                <button onClick={() => handleSaveUpdate(event.id)}>Save</button>\r\n                <button onClick={handleCancelEdit}>Cancel</button>\r\n              </div>\r\n            ) : (\r\n              <div className=\"event-details\">\r\n                <p><strong>Name:</strong> {event.name}</p>\r\n                <p><strong>Description:</strong> {event.description}</p>\r\n                <p><strong>Type:</strong> {event.type}</p>\r\n                <p><strong>Priority:</strong> {event.priority}</p>\r\n                <button onClick={() => handleUpdate(event.id)}>Edit</button>\r\n                <button onClick={() => handleDelete(event.id)}>Delete</button>\r\n              </div>\r\n            )}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EventListPage;\r\n","C:\\Users\\nicot\\OneDrive\\Escritorio\\outfit8\\events7-frontend\\src\\pages\\CreateEventPage.tsx",[],[],{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":19,"column":9,"nodeType":"45","messageId":"46","endLine":19,"endColumn":17},"no-new-object",["47"],"@typescript-eslint/no-unused-vars","'navigate' is assigned a value but never used.","Identifier","unusedVar","no-object-constructor"]