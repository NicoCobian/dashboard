{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nicot\\\\OneDrive\\\\Escritorio\\\\outfit8\\\\events7-frontend\\\\src\\\\components\\\\UpdateEvent.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst UpdateEvent = () => {\n  _s();\n  const navigate = useNavigate();\n  const [eventData, setEventData] = useState({\n    name: '',\n    description: '',\n    type: '',\n    priority: 0\n  });\n  const [events, setEvents] = useState([]);\n  const [selectedEventId, setSelectedEventId] = useState('');\n  const updateEventInList = updatedEvent => {\n    // Actualiza la lista de eventos en este componente\n    const updatedEvents = events.map(event => {\n      if (event.id === updatedEvent.id) {\n        return updatedEvent;\n      }\n      return event;\n    });\n    setEvents(updatedEvents);\n  };\n  const handleUpdate = async () => {\n    if (!selectedEventId) {\n      return;\n    }\n    try {\n      const response = await axios.put(`http://localhost:3001/events/${selectedEventId}`, eventData);\n      console.log('Evento actualizado:', response.data);\n\n      // Llama a la función updateEventInList para actualizar la lista de eventos en este componente\n      updateEventInList(response.data);\n\n      // Redirigir al usuario a la vista del evento actualizado\n      navigate(`/view/${selectedEventId}`);\n    } catch (error) {\n      console.error('Error al actualizar evento:', error);\n    }\n  };\n  useEffect(() => {\n    const fetchEvents = async () => {\n      try {\n        const response = await axios.get('http://localhost:3001/events');\n        setEvents(response.data);\n      } catch (error) {\n        console.error('Error al cargar los eventos:', error);\n      }\n    };\n    fetchEvents();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Update Event\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => setSelectedEventId(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Selecciona un evento\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), events.map(event => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: event.id,\n          children: event.name\n        }, event.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), selectedEventId && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Name\",\n          value: eventData.name,\n          onChange: e => setEventData({\n            ...eventData,\n            name: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Description\",\n          value: eventData.description,\n          onChange: e => setEventData({\n            ...eventData,\n            description: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Type\",\n          value: eventData.type,\n          onChange: e => setEventData({\n            ...eventData,\n            type: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          placeholder: \"Priority\",\n          value: eventData.priority,\n          onChange: e => setEventData({\n            ...eventData,\n            priority: parseInt(e.target.value)\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleUpdate,\n          children: \"Update event\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(UpdateEvent, \"oi+S3FhL989oU4fG+ux9gznbdUw=\", false, function () {\n  return [useNavigate];\n});\n_c = UpdateEvent;\nexport default UpdateEvent;\nvar _c;\n$RefreshReg$(_c, \"UpdateEvent\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","UpdateEvent","_s","navigate","eventData","setEventData","name","description","type","priority","events","setEvents","selectedEventId","setSelectedEventId","updateEventInList","updatedEvent","updatedEvents","map","event","id","handleUpdate","response","put","console","log","data","error","fetchEvents","get","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","value","placeholder","parseInt","onClick","_c","$RefreshReg$"],"sources":["C:/Users/nicot/OneDrive/Escritorio/outfit8/events7-frontend/src/components/UpdateEvent.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\ntype EventData = {\r\n  name: string;\r\n  description: string;\r\n  type: string;\r\n  priority: number;\r\n};\r\n\r\nconst UpdateEvent = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const [eventData, setEventData] = useState<EventData>({\r\n    name: '',\r\n    description: '',\r\n    type: '',\r\n    priority: 0,\r\n  });\r\n\r\n  const [events, setEvents] = useState<any[]>([]);\r\n  const [selectedEventId, setSelectedEventId] = useState<string>('');\r\n\r\n  const updateEventInList = (updatedEvent: any) => {\r\n    // Actualiza la lista de eventos en este componente\r\n    const updatedEvents = events.map((event) => {\r\n      if (event.id === updatedEvent.id) {\r\n        return updatedEvent;\r\n      }\r\n      return event;\r\n    });\r\n    setEvents(updatedEvents);\r\n  };\r\n\r\n  const handleUpdate = async () => {\r\n    if (!selectedEventId) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.put(\r\n        `http://localhost:3001/events/${selectedEventId}`,\r\n        eventData\r\n      );\r\n      console.log('Evento actualizado:', response.data);\r\n\r\n      // Llama a la función updateEventInList para actualizar la lista de eventos en este componente\r\n      updateEventInList(response.data);\r\n\r\n      // Redirigir al usuario a la vista del evento actualizado\r\n      navigate(`/view/${selectedEventId}`);\r\n    } catch (error) {\r\n      console.error('Error al actualizar evento:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchEvents = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:3001/events');\r\n        setEvents(response.data);\r\n      } catch (error) {\r\n        console.error('Error al cargar los eventos:', error);\r\n      }\r\n    };\r\n\r\n    fetchEvents();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Update Event</h2>\r\n      <form>\r\n        <select onChange={(e) => setSelectedEventId(e.target.value)}>\r\n          <option value=\"\">Selecciona un evento</option>\r\n          {events.map((event: any) => (\r\n            <option key={event.id} value={event.id}>\r\n              {event.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <br />\r\n        {selectedEventId && (\r\n          <>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Name\"\r\n              value={eventData.name}\r\n              onChange={(e) => setEventData({ ...eventData, name: e.target.value })}\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Description\"\r\n              value={eventData.description}\r\n              onChange={(e) =>\r\n                setEventData({ ...eventData, description: e.target.value })\r\n              }\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Type\"\r\n              value={eventData.type}\r\n              onChange={(e) => setEventData({ ...eventData, type: e.target.value })}\r\n            />\r\n            <input\r\n              type=\"number\"\r\n              placeholder=\"Priority\"\r\n              value={eventData.priority}\r\n              onChange={(e) =>\r\n                setEventData({ ...eventData, priority: parseInt(e.target.value) })\r\n              }\r\n            />\r\n            <br />\r\n            <button type=\"button\" onClick={handleUpdate}>\r\n              Update event\r\n            </button>\r\n          </>\r\n        )}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpdateEvent;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAS/C,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAE9B,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAY;IACpDa,IAAI,EAAE,EAAE;IACRC,WAAW,EAAE,EAAE;IACfC,IAAI,EAAE,EAAE;IACRC,QAAQ,EAAE;EACZ,CAAC,CAAC;EAEF,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGlB,QAAQ,CAAQ,EAAE,CAAC;EAC/C,MAAM,CAACmB,eAAe,EAAEC,kBAAkB,CAAC,GAAGpB,QAAQ,CAAS,EAAE,CAAC;EAElE,MAAMqB,iBAAiB,GAAIC,YAAiB,IAAK;IAC/C;IACA,MAAMC,aAAa,GAAGN,MAAM,CAACO,GAAG,CAAEC,KAAK,IAAK;MAC1C,IAAIA,KAAK,CAACC,EAAE,KAAKJ,YAAY,CAACI,EAAE,EAAE;QAChC,OAAOJ,YAAY;MACrB;MACA,OAAOG,KAAK;IACd,CAAC,CAAC;IACFP,SAAS,CAACK,aAAa,CAAC;EAC1B,CAAC;EAED,MAAMI,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI,CAACR,eAAe,EAAE;MACpB;IACF;IAEA,IAAI;MACF,MAAMS,QAAQ,GAAG,MAAM1B,KAAK,CAAC2B,GAAG,CAC7B,gCAA+BV,eAAgB,EAAC,EACjDR,SACF,CAAC;MACDmB,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEH,QAAQ,CAACI,IAAI,CAAC;;MAEjD;MACAX,iBAAiB,CAACO,QAAQ,CAACI,IAAI,CAAC;;MAEhC;MACAtB,QAAQ,CAAE,SAAQS,eAAgB,EAAC,CAAC;IACtC,CAAC,CAAC,OAAOc,KAAK,EAAE;MACdH,OAAO,CAACG,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACrD;EACF,CAAC;EAEDhC,SAAS,CAAC,MAAM;IACd,MAAMiC,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMN,QAAQ,GAAG,MAAM1B,KAAK,CAACiC,GAAG,CAAC,8BAA8B,CAAC;QAChEjB,SAAS,CAACU,QAAQ,CAACI,IAAI,CAAC;MAC1B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdH,OAAO,CAACG,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACtD;IACF,CAAC;IAEDC,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE7B,OAAA;IAAA+B,QAAA,gBACE/B,OAAA;MAAA+B,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBnC,OAAA;MAAA+B,QAAA,gBACE/B,OAAA;QAAQoC,QAAQ,EAAGC,CAAC,IAAKtB,kBAAkB,CAACsB,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;QAAAR,QAAA,gBAC1D/B,OAAA;UAAQuC,KAAK,EAAC,EAAE;UAAAR,QAAA,EAAC;QAAoB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EAC7CvB,MAAM,CAACO,GAAG,CAAEC,KAAU,iBACrBpB,OAAA;UAAuBuC,KAAK,EAAEnB,KAAK,CAACC,EAAG;UAAAU,QAAA,EACpCX,KAAK,CAACZ;QAAI,GADAY,KAAK,CAACC,EAAE;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEb,CACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC,eACTnC,OAAA;QAAAgC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,EACLrB,eAAe,iBACdd,OAAA,CAAAE,SAAA;QAAA6B,QAAA,gBACE/B,OAAA;UACEU,IAAI,EAAC,MAAM;UACX8B,WAAW,EAAC,MAAM;UAClBD,KAAK,EAAEjC,SAAS,CAACE,IAAK;UACtB4B,QAAQ,EAAGC,CAAC,IAAK9B,YAAY,CAAC;YAAE,GAAGD,SAAS;YAAEE,IAAI,EAAE6B,CAAC,CAACC,MAAM,CAACC;UAAM,CAAC;QAAE;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvE,CAAC,eACFnC,OAAA;UACEU,IAAI,EAAC,MAAM;UACX8B,WAAW,EAAC,aAAa;UACzBD,KAAK,EAAEjC,SAAS,CAACG,WAAY;UAC7B2B,QAAQ,EAAGC,CAAC,IACV9B,YAAY,CAAC;YAAE,GAAGD,SAAS;YAAEG,WAAW,EAAE4B,CAAC,CAACC,MAAM,CAACC;UAAM,CAAC;QAC3D;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC,eACFnC,OAAA;UACEU,IAAI,EAAC,MAAM;UACX8B,WAAW,EAAC,MAAM;UAClBD,KAAK,EAAEjC,SAAS,CAACI,IAAK;UACtB0B,QAAQ,EAAGC,CAAC,IAAK9B,YAAY,CAAC;YAAE,GAAGD,SAAS;YAAEI,IAAI,EAAE2B,CAAC,CAACC,MAAM,CAACC;UAAM,CAAC;QAAE;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvE,CAAC,eACFnC,OAAA;UACEU,IAAI,EAAC,QAAQ;UACb8B,WAAW,EAAC,UAAU;UACtBD,KAAK,EAAEjC,SAAS,CAACK,QAAS;UAC1ByB,QAAQ,EAAGC,CAAC,IACV9B,YAAY,CAAC;YAAE,GAAGD,SAAS;YAAEK,QAAQ,EAAE8B,QAAQ,CAACJ,CAAC,CAACC,MAAM,CAACC,KAAK;UAAE,CAAC;QAClE;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC,eACFnC,OAAA;UAAAgC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACNnC,OAAA;UAAQU,IAAI,EAAC,QAAQ;UAACgC,OAAO,EAAEpB,YAAa;UAAAS,QAAA,EAAC;QAE7C;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,eACT,CACH;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAAC/B,EAAA,CA/GID,WAAW;EAAA,QACEL,WAAW;AAAA;AAAA6C,EAAA,GADxBxC,WAAW;AAiHjB,eAAeA,WAAW;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}