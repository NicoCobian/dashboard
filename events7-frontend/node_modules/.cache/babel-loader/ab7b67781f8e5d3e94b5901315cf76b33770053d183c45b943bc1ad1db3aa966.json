{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nicot\\\\OneDrive\\\\Escritorio\\\\outfit8\\\\events7-frontend\\\\src\\\\components\\\\UpdateEvent.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\n\n// Define tipos para selectedEventId y eventData\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ParentComponent = () => {\n  _s();\n  const [events, setEvents] = useState([]);\n  const updateEventInList = updatedEvent => {\n    // Actualiza la lista de eventos en este componente padre\n    const updatedEvents = events.map(event => {\n      if (event.id === updatedEvent.id) {\n        return updatedEvent;\n      }\n      return event;\n    });\n    setEvents(updatedEvents);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Parent Component\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UpdateEvent, {\n      updateEventInList: updateEventInList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(ParentComponent, \"fh+hzEDekCPeegwQh0J56A4r3Ew=\");\n_c = ParentComponent;\nconst UpdateEvent = ({\n  updateEventInList\n}) => {\n  _s2();\n  const navigate = useNavigate();\n  const [eventData, setEventData] = useState({\n    name: '',\n    description: '',\n    type: '',\n    priority: 0\n  });\n  const [events, setEvents] = useState([]);\n  const [selectedEventId, setSelectedEventId] = useState('');\n  const handleUpdate = async () => {\n    if (!selectedEventId) {\n      return;\n    }\n    try {\n      const response = await axios.put(`http://localhost:3001/events/${selectedEventId}`, eventData);\n      console.log('Evento actualizado:', response.data);\n\n      // Llama a la función updateEventInList para actualizar la lista de eventos en el componente padre\n      updateEventInList(response.data);\n\n      // Redirigir al usuario a la vista del evento actualizado\n      navigate(`/view/${selectedEventId}`);\n    } catch (error) {\n      console.error('Error al actualizar evento:', error);\n    }\n  };\n  useEffect(() => {\n    // Carga la lista de eventos\n    // Resto del contenido\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Update Event\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s2(UpdateEvent, \"oi+S3FhL989oU4fG+ux9gznbdUw=\", false, function () {\n  return [useNavigate];\n});\n_c2 = UpdateEvent;\nexport default ParentComponent;\nvar _c, _c2;\n$RefreshReg$(_c, \"ParentComponent\");\n$RefreshReg$(_c2, \"UpdateEvent\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","jsxDEV","_jsxDEV","ParentComponent","_s","events","setEvents","updateEventInList","updatedEvent","updatedEvents","map","event","id","children","fileName","_jsxFileName","lineNumber","columnNumber","UpdateEvent","_c","_s2","navigate","eventData","setEventData","name","description","type","priority","selectedEventId","setSelectedEventId","handleUpdate","response","put","console","log","data","error","_c2","$RefreshReg$"],"sources":["C:/Users/nicot/OneDrive/Escritorio/outfit8/events7-frontend/src/components/UpdateEvent.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n// Define tipos para selectedEventId y eventData\r\ntype EventData = {\r\n  name: string;\r\n  description: string;\r\n  type: string;\r\n  priority: number;\r\n};\r\n\r\nconst ParentComponent = () => {\r\n  const [events, setEvents] = useState<any[]>([]);\r\n\r\n  const updateEventInList = (updatedEvent: any) => {\r\n    // Actualiza la lista de eventos en este componente padre\r\n    const updatedEvents = events.map((event) => {\r\n      if (event.id === updatedEvent.id) {\r\n        return updatedEvent;\r\n      }\r\n      return event;\r\n    });\r\n    setEvents(updatedEvents);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Parent Component</h2>\r\n      <UpdateEvent updateEventInList={updateEventInList} />\r\n      {/* Renderiza la lista de eventos y pasa updateEventInList como una propiedad */}\r\n      {/* Resto del contenido */}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst UpdateEvent = ({ updateEventInList }: { updateEventInList: (updatedEvent: any) => void }) => {\r\n  const navigate = useNavigate();\r\n\r\n  const [eventData, setEventData] = useState<EventData>({\r\n    name: '',\r\n    description: '',\r\n    type: '',\r\n    priority: 0,\r\n  });\r\n\r\n  const [events, setEvents] = useState<any[]>([]);\r\n  const [selectedEventId, setSelectedEventId] = useState<string>('');\r\n\r\n  const handleUpdate = async () => {\r\n    if (!selectedEventId) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.put(\r\n        `http://localhost:3001/events/${selectedEventId}`,\r\n        eventData\r\n      );\r\n      console.log('Evento actualizado:', response.data);\r\n\r\n      // Llama a la función updateEventInList para actualizar la lista de eventos en el componente padre\r\n      updateEventInList(response.data);\r\n\r\n      // Redirigir al usuario a la vista del evento actualizado\r\n      navigate(`/view/${selectedEventId}`);\r\n    } catch (error) {\r\n      console.error('Error al actualizar evento:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Carga la lista de eventos\r\n    // Resto del contenido\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Update Event</h2>\r\n      {/* Resto del contenido */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ParentComponent;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}