{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nicot\\\\OneDrive\\\\Escritorio\\\\outfit8\\\\events7-frontend\\\\src\\\\components\\\\ViewEvent.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\n// Definir un tipo para los eventos\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ViewEvent = () => {\n  _s();\n  const [events, setEvents] = useState([]);\n  useEffect(() => {\n    const fetchEvents = async () => {\n      try {\n        // Reemplaza 'http://localhost:3000' con la URL de tu backend\n        // Asegúrate de que coincida con la ruta definida en tu backend ('/events')\n        const response = await axios.get('http://localhost:3001/events');\n        setEvents(response.data);\n      } catch (error) {\n        console.error('Error al cargar los eventos:', error);\n      }\n    };\n\n    // Llama a la función para cargar eventos cuando el componente se monta\n    fetchEvents();\n  }, []);\n\n  // Agrega una función para actualizar la lista de eventos\n  const updateEventInList = updatedEvent => {\n    // Encuentra el evento actualizado en la lista y reemplázalo\n    setEvents(prevEvents => prevEvents.map(event => event.id === updatedEvent.id ? updatedEvent : event));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Event List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), events.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: events.map(event => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"ID: \", event.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Name: \", event.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Description: \", event.description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Type: \", event.type]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this)]\n      }, event.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No events available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(ViewEvent, \"j18ueuia/psAZ/XawE3UyqzOWsE=\");\n_c = ViewEvent;\nexport default ViewEvent;\nvar _c;\n$RefreshReg$(_c, \"ViewEvent\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","ViewEvent","_s","events","setEvents","fetchEvents","response","get","data","error","console","updateEventInList","updatedEvent","prevEvents","map","event","id","children","fileName","_jsxFileName","lineNumber","columnNumber","length","name","description","type","_c","$RefreshReg$"],"sources":["C:/Users/nicot/OneDrive/Escritorio/outfit8/events7-frontend/src/components/ViewEvent.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\n// Definir un tipo para los eventos\r\ntype Event = {\r\n  id: number;\r\n  name: string;\r\n  description: string;\r\n  type: string;\r\n};\r\n\r\nconst ViewEvent = () => {\r\n  const [events, setEvents] = useState<Event[]>([]);\r\n\r\n  useEffect(() => {\r\n    const fetchEvents = async () => {\r\n      try {\r\n        // Reemplaza 'http://localhost:3000' con la URL de tu backend\r\n        // Asegúrate de que coincida con la ruta definida en tu backend ('/events')\r\n        const response = await axios.get('http://localhost:3001/events');\r\n        setEvents(response.data);\r\n      } catch (error) {\r\n        console.error('Error al cargar los eventos:', error);\r\n      }\r\n    };\r\n\r\n    // Llama a la función para cargar eventos cuando el componente se monta\r\n    fetchEvents();\r\n  }, []);\r\n\r\n  // Agrega una función para actualizar la lista de eventos\r\n  const updateEventInList = (updatedEvent: Event) => {\r\n    // Encuentra el evento actualizado en la lista y reemplázalo\r\n    setEvents(prevEvents =>\r\n      prevEvents.map(event =>\r\n        event.id === updatedEvent.id ? updatedEvent : event\r\n      )\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Event List</h2>\r\n      {events.length > 0 ? (\r\n        <ul>\r\n          {events.map(event => (\r\n            <li key={event.id}>\r\n              <p>ID: {event.id}</p>\r\n              <p>Name: {event.name}</p>\r\n              <p>Description: {event.description}</p>\r\n              <p>Type: {event.type}</p>\r\n              {/* Resto del contenido */}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        <p>No events available.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ViewEvent;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAQA,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAU,EAAE,CAAC;EAEjDD,SAAS,CAAC,MAAM;IACd,MAAMS,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF;QACA;QACA,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,8BAA8B,CAAC;QAChEH,SAAS,CAACE,QAAQ,CAACE,IAAI,CAAC;MAC1B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACtD;IACF,CAAC;;IAED;IACAJ,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMM,iBAAiB,GAAIC,YAAmB,IAAK;IACjD;IACAR,SAAS,CAACS,UAAU,IAClBA,UAAU,CAACC,GAAG,CAACC,KAAK,IAClBA,KAAK,CAACC,EAAE,KAAKJ,YAAY,CAACI,EAAE,GAAGJ,YAAY,GAAGG,KAChD,CACF,CAAC;EACH,CAAC;EAED,oBACEf,OAAA;IAAAiB,QAAA,gBACEjB,OAAA;MAAAiB,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAClBlB,MAAM,CAACmB,MAAM,GAAG,CAAC,gBAChBtB,OAAA;MAAAiB,QAAA,EACGd,MAAM,CAACW,GAAG,CAACC,KAAK,iBACff,OAAA;QAAAiB,QAAA,gBACEjB,OAAA;UAAAiB,QAAA,GAAG,MAAI,EAACF,KAAK,CAACC,EAAE;QAAA;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACrBrB,OAAA;UAAAiB,QAAA,GAAG,QAAM,EAACF,KAAK,CAACQ,IAAI;QAAA;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACzBrB,OAAA;UAAAiB,QAAA,GAAG,eAAa,EAACF,KAAK,CAACS,WAAW;QAAA;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACvCrB,OAAA;UAAAiB,QAAA,GAAG,QAAM,EAACF,KAAK,CAACU,IAAI;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAJlBN,KAAK,CAACC,EAAE;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMb,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,gBAELrB,OAAA;MAAAiB,QAAA,EAAG;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAC3B;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACnB,EAAA,CAjDID,SAAS;AAAAyB,EAAA,GAATzB,SAAS;AAmDf,eAAeA,SAAS;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}